{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Microtasks\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth } from '../utils/authContext';\nimport { useCredits } from '../utils/creditContext';\nimport { handleLoginSubmit } from '../utils/formHandlers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [values, setValues] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    setIsAuthenticated\n  } = useAuth();\n  const {\n    setCredits\n  } = useCredits();\n  const handleChange = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await handleLoginSubmit(values);\n    if (response.success) {\n      setIsAuthenticated(true);\n      setCredits(response.credits); // Set user credits\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"ktjk0YVf3WAHq4tg+niK08trMPg=\", false, function () {\n  return [useAuth, useCredits];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useAuth","useCredits","handleLoginSubmit","jsxDEV","_jsxDEV","Login","_s","values","setValues","email","password","setIsAuthenticated","setCredits","handleChange","e","target","name","value","handleSubmit","preventDefault","response","success","credits","alert","onSubmit","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Coding/Microtasks/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from '../utils/authContext';\r\nimport { useCredits } from '../utils/creditContext';\r\nimport { handleLoginSubmit } from '../utils/formHandlers';\r\n\r\nconst Login = () => {\r\n    const [values, setValues] = useState({ email: '', password: '' });\r\n    const { setIsAuthenticated } = useAuth();\r\n    const { setCredits } = useCredits();\r\n\r\n    const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const response = await handleLoginSubmit(values);\r\n        if (response.success) {\r\n            setIsAuthenticated(true);\r\n            setCredits(response.credits);  // Set user credits\r\n        } else {\r\n            alert('Invalid credentials');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input name=\"email\" value={values.email} onChange={handleChange} placeholder=\"Email\" />\r\n            <input name=\"password\" type=\"password\" value={values.password} onChange={handleChange} placeholder=\"Password\" />\r\n            <button type=\"submit\">Login</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,iBAAiB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC;IAAEU,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACjE,MAAM;IAAEC;EAAmB,CAAC,GAAGX,OAAO,CAAC,CAAC;EACxC,MAAM;IAAEY;EAAW,CAAC,GAAGX,UAAU,CAAC,CAAC;EAEnC,MAAMY,YAAY,GAAIC,CAAC,IAAK;IACxBN,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAE,CAACO,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMlB,iBAAiB,CAACK,MAAM,CAAC;IAChD,IAAIa,QAAQ,CAACC,OAAO,EAAE;MAClBV,kBAAkB,CAAC,IAAI,CAAC;MACxBC,UAAU,CAACQ,QAAQ,CAACE,OAAO,CAAC,CAAC,CAAE;IACnC,CAAC,MAAM;MACHC,KAAK,CAAC,qBAAqB,CAAC;IAChC;EACJ,CAAC;EAED,oBACInB,OAAA;IAAMoB,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBACzBrB,OAAA;MAAOY,IAAI,EAAC,OAAO;MAACC,KAAK,EAAEV,MAAM,CAACE,KAAM;MAACiB,QAAQ,EAAEb,YAAa;MAACc,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvF3B,OAAA;MAAOY,IAAI,EAAC,UAAU;MAACgB,IAAI,EAAC,UAAU;MAACf,KAAK,EAAEV,MAAM,CAACG,QAAS;MAACgB,QAAQ,EAAEb,YAAa;MAACc,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChH3B,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAP,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEf,CAAC;AAACzB,EAAA,CA3BID,KAAK;EAAA,QAEwBL,OAAO,EACfC,UAAU;AAAA;AAAAgC,EAAA,GAH/B5B,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}